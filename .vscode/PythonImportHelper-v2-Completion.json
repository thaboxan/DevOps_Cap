[
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "CORSMiddleware",
        "importPath": "fastapi.middleware.cors",
        "description": "fastapi.middleware.cors",
        "isExtraImport": true,
        "detail": "fastapi.middleware.cors",
        "documentation": {}
    },
    {
        "label": "qrcode",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "qrcode",
        "description": "qrcode",
        "detail": "qrcode",
        "documentation": {}
    },
    {
        "label": "boto3",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "boto3",
        "description": "boto3",
        "detail": "boto3",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "BytesIO",
        "importPath": "io",
        "description": "io",
        "isExtraImport": true,
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "TestClient",
        "importPath": "fastapi.testclient",
        "description": "fastapi.testclient",
        "isExtraImport": true,
        "detail": "fastapi.testclient",
        "documentation": {}
    },
    {
        "label": "app",
        "importPath": "main",
        "description": "main",
        "isExtraImport": true,
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "api.main",
        "description": "api.main",
        "peekOfCode": "app = FastAPI()\n# Allowing CORS for local testing\norigins = [\n    \"http://localhost:3000\"\n]\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,\n    allow_methods=[\"*\"],\n    allow_headers=[\"*\"],",
        "detail": "api.main",
        "documentation": {}
    },
    {
        "label": "origins",
        "kind": 5,
        "importPath": "api.main",
        "description": "api.main",
        "peekOfCode": "origins = [\n    \"http://localhost:3000\"\n]\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,\n    allow_methods=[\"*\"],\n    allow_headers=[\"*\"],\n)\n# AWS S3 Configuration",
        "detail": "api.main",
        "documentation": {}
    },
    {
        "label": "s3",
        "kind": 5,
        "importPath": "api.main",
        "description": "api.main",
        "peekOfCode": "s3 = boto3.client(\n    's3',\n    aws_access_key_id= os.getenv(\"AWS_ACCESS_KEY\"),\n    aws_secret_access_key= os.getenv(\"AWS_SECRET_KEY\"))\nbucket_name = 'YOUR_BUCKET_NAME' # Add your bucket name here\n@app.post(\"/generate-qr/\")\nasync def generate_qr(url: str):\n    # Generate QR Code\n    qr = qrcode.QRCode(\n        version=1,",
        "detail": "api.main",
        "documentation": {}
    },
    {
        "label": "bucket_name",
        "kind": 5,
        "importPath": "api.main",
        "description": "api.main",
        "peekOfCode": "bucket_name = 'YOUR_BUCKET_NAME' # Add your bucket name here\n@app.post(\"/generate-qr/\")\nasync def generate_qr(url: str):\n    # Generate QR Code\n    qr = qrcode.QRCode(\n        version=1,\n        error_correction=qrcode.constants.ERROR_CORRECT_L,\n        box_size=10,\n        border=4,\n    )",
        "detail": "api.main",
        "documentation": {}
    },
    {
        "label": "test_generate_qr",
        "kind": 2,
        "importPath": "api.test_main",
        "description": "api.test_main",
        "peekOfCode": "def test_generate_qr():\n    url = \"http://example.com\"\n    response = client.post(\"/generate-qr/\", json={\"url\": url})\n    assert response.status_code == 200\n    assert \"qr_code_url\" in response.json()\ndef test_generate_qr_invalid_url():\n    url = \"invalid-url\"\n    response = client.post(\"/generate-qr/\", json={\"url\": url})\n    assert response.status_code == 422  # FastAPI validation error",
        "detail": "api.test_main",
        "documentation": {}
    },
    {
        "label": "test_generate_qr_invalid_url",
        "kind": 2,
        "importPath": "api.test_main",
        "description": "api.test_main",
        "peekOfCode": "def test_generate_qr_invalid_url():\n    url = \"invalid-url\"\n    response = client.post(\"/generate-qr/\", json={\"url\": url})\n    assert response.status_code == 422  # FastAPI validation error",
        "detail": "api.test_main",
        "documentation": {}
    },
    {
        "label": "client",
        "kind": 5,
        "importPath": "api.test_main",
        "description": "api.test_main",
        "peekOfCode": "client = TestClient(app)\ndef test_generate_qr():\n    url = \"http://example.com\"\n    response = client.post(\"/generate-qr/\", json={\"url\": url})\n    assert response.status_code == 200\n    assert \"qr_code_url\" in response.json()\ndef test_generate_qr_invalid_url():\n    url = \"invalid-url\"\n    response = client.post(\"/generate-qr/\", json={\"url\": url})\n    assert response.status_code == 422  # FastAPI validation error",
        "detail": "api.test_main",
        "documentation": {}
    }
]